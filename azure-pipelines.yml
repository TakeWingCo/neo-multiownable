jobs: 
- job: Windows

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  # Download NEO-Compiler
  - script: |
      git clone https://github.com/CityOfZion/neo-debugger-tools
    displayName: 'Download NEO-Compiler'

  # Copy packages to offline source and install them
  - script: |
      xcopy TakeWing.Neo.Multiownable.Tests\Neo.Debugger.Core.1.0.0.nupkg "C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\"
      xcopy TakeWing.Neo.Multiownable.Tests\Neo.Emulator.1.0.0.nupkg "C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\"
    displayName: 'Copy packages'

  - task: NuGetCommand@2
    inputs:
      command: custom
      arguments: install Neo.Debugger.Core -OutputDirectory packages
    displayName: 'Install Neo.Debugger.Core'

  - task: NuGetCommand@2
    inputs:
      command: custom
      arguments: install Neo.Emulator -OutputDirectory packages -Source "Microsoft Visual Studio Offline Packages"
    displayName: 'Install Neo.Emulator'

  # Restore all the other packages
  - task: NuGetCommand@2
    inputs:
      command: custom
      arguments: restore neo-debugger-tools\neo-dev-tools.sln
    displayName: 'Restore NEO-Compiler packages'

  - task: NuGetCommand@2
    inputs:
      command: custom
      arguments: restore TakeWing.Neo.Multiownable\TakeWing.Neo.Multiownable.csproj -PackagesDirectory packages
    displayName: 'Restore Multiownable packages'

  - task: NuGetCommand@2
    inputs:
      command: custom
      arguments: restore TakeWing.Neo.Multiownable.SmartContractsForTests\TakeWing.Neo.Multiownable.SmartContractsForTests.csproj -PackagesDirectory packages
    displayName: 'Restore Multiownable.SmartContractsForTests packages'

  - script: dotnet restore TakeWing.Neo.Multiownable.MSTests\TakeWing.Neo.Multiownable.MSTests.csproj
    displayName: 'Restore Multiownable.MSTests packages'

  # Build NEO-Compiler and copy it to Debug directory to use it
  - script: |
      dotnet build neo-debugger-tools\NEO-Compiler\NEO-Compiler.csproj
      xcopy neo-debugger-tools\NEO-Compiler\bin\Debug\* TakeWing.Neo.Multiownable.SmartContractsForTests\bin\Debug\
    displayName: 'Build and copy NEO-Compiler'

  # Build Multiownable project
  - task: MsBuild@1
    inputs:
      solution: TakeWing.Neo.Multiownable\TakeWing.Neo.Multiownable.csproj
    displayName: 'Build Multiownable'

  # Build smart contract for tests
  - task: MsBuild@1
    inputs:
      solution: TakeWing.Neo.Multiownable.SmartContractsForTests\TakeWing.Neo.Multiownable.SmartContractsForTests.csproj
    displayName: 'Build Multiownable.SmartContractForTests'

  # Build tests
  - task: MsBuild@1
    inputs:
      solution: TakeWing.Neo.Multiownable.MSTests\TakeWing.Neo.Multiownable.MSTests.csproj
    displayName: 'Build Multiownable.Tests'

  # Run all tests
  - script: dotnet test TakeWing.Neo.Multiownable.MSTests\TakeWing.Neo.Multiownable.MSTests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
    displayName: 'Run tests'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '**/coverage.cobertura.xml'
    displayName: 'Publish coverage results'

  # Build tests
  #- task: MsBuild@1
  #  inputs:
  #    solution: TakeWing.Neo.Multiownable.Tests\TakeWing.Neo.Multiownable.Tests.csproj
  #  displayName: 'Build Multiownable.Tests'

  # Run all tests
  #- task: VSTest@2
  #  inputs:
  #    testSelector: 'testAssemblies'
  #    testAssemblyVer2: TakeWing.Neo.Multiownable.Tests\bin\Debug\TakeWing.Neo.Multiownable.Tests.dll
  #    codeCoverageEnabled: True
  #  displayName: 'Run Multiownable.Tests'